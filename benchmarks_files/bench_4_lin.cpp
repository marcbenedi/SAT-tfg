#include <iostream>
#include <string>
#include <chrono>

#include "Solver.h"
#include "LinearSearchStrategy.h"
#include "BinarySearchStrategy.h"

//Adapted benchmark from minlplib2-pb-0.1.0/opb/crossdock_15x7.opb

int main() {

    std::vector< PBConstraint > constraints = {
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {1, 2, 3, 4, 5, 6, 7}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {8, 9, 10, 11, 12, 13, 14}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {15, 16, 17, 18, 19, 20, 21}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {22, 23, 24, 25, 26, 27, 28}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {29, 30, 31, 32, 33, 34, 35}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {36, 37, 38, 39, 40, 41, 42}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {43, 44, 45, 46, 47, 48, 49}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {50, 51, 52, 53, 54, 55, 56}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {57, 58, 59, 60, 61, 62, 63}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {64, 65, 66, 67, 68, 69, 70}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {71, 72, 73, 74, 75, 76, 77}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {78, 79, 80, 81, 82, 83, 84}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {85, 86, 87, 88, 89, 90, 91}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {92, 93, 94, 95, 96, 97, 98}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {99, 100, 101, 102, 103, 104, 105}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {106, 107, 108, 109, 110, 111, 112}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {113, 114, 115, 116, 117, 118, 119}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {120, 121, 122, 123, 124, 125, 126}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {127, 128, 129, 130, 131, 132, 133}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {134, 135, 136, 137, 138, 139, 140}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {141, 142, 143, 144, 145, 146, 147}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {148, 149, 150, 151, 152, 153, 154}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {155, 156, 157, 158, 159, 160, 161}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {162, 163, 164, 165, 166, 167, 168}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {169, 170, 171, 172, 173, 174, 175}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {176, 177, 178, 179, 180, 181, 182}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {183, 184, 185, 186, 187, 188, 189}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {190, 191, 192, 193, 194, 195, 196}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {197, 198, 199, 200, 201, 202, 203}),
        -1),
        PBConstraint(PBFormula(
            {-1, -1, -1, -1, -1, -1, -1},
            {204, 205, 206, 207, 208, 209, 210}),
        -1),
        PBConstraint(PBFormula(
            {130, 84, 63, 233, 103, 118, 62, 62, 138, 129, 25, 120, 93, 166, 98},
            {1, 8, 15, 22, 29, 36, 43, 50, 57, 64, 71, 78, 85, 92, 99}),
        302),
        PBConstraint(PBFormula(
            {130, 84, 63, 233, 103, 118, 62, 62, 138, 129, 25, 120, 93, 166, 98},
            {2, 9, 16, 23, 30, 37, 44, 51, 58, 65, 72, 79, 86, 93, 100}),
        302),
        PBConstraint(PBFormula(
            {130, 84, 63, 233, 103, 118, 62, 62, 138, 129, 25, 120, 93, 166, 98},
            {3, 10, 17, 24, 31, 38, 45, 52, 59, 66, 73, 80, 87, 94, 101}),
        302),
        PBConstraint(PBFormula(
            {130, 84, 63, 233, 103, 118, 62, 62, 138, 129, 25, 120, 93, 166, 98},
            {4, 11, 18, 25, 32, 39, 46, 53, 60, 67, 74, 81, 88, 95, 102}),
        302),
        PBConstraint(PBFormula(
            {130, 84, 63, 233, 103, 118, 62, 62, 138, 129, 25, 120, 93, 166, 98},
            {5, 12, 19, 26, 33, 40, 47, 54, 61, 68, 75, 82, 89, 96, 103}),
        302),
        PBConstraint(PBFormula(
            {130, 84, 63, 233, 103, 118, 62, 62, 138, 129, 25, 120, 93, 166, 98},
            {6, 13, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83, 90, 97, 104}),
        302),
        PBConstraint(PBFormula(
            {130, 84, 63, 233, 103, 118, 62, 62, 138, 129, 25, 120, 93, 166, 98},
            {7, 14, 21, 28, 35, 42, 49, 56, 63, 70, 77, 84, 91, 98, 105}),
        302),
        PBConstraint(PBFormula(
            {112, 158, 128, 35, 34, 160, 121, 178, 118, 38, 102, 87, 79, 66, 208},
            {106, 113, 120, 127, 134, 141, 148, 155, 162, 169, 176, 183, 190, 197, 204}),
        302),
        PBConstraint(PBFormula(
            {112, 158, 128, 35, 34, 160, 121, 178, 118, 38, 102, 87, 79, 66, 208},
            {107, 114, 121, 128, 135, 142, 149, 156, 163, 170, 177, 184, 191, 198, 205}),
        302),
        PBConstraint(PBFormula(
            {112, 158, 128, 35, 34, 160, 121, 178, 118, 38, 102, 87, 79, 66, 208},
            {108, 115, 122, 129, 136, 143, 150, 157, 164, 171, 178, 185, 192, 199, 206}),
        302),
        PBConstraint(PBFormula(
            {112, 158, 128, 35, 34, 160, 121, 178, 118, 38, 102, 87, 79, 66, 208},
            {109, 116, 123, 130, 137, 144, 151, 158, 165, 172, 179, 186, 193, 200, 207}),
        302),
        PBConstraint(PBFormula(
            {112, 158, 128, 35, 34, 160, 121, 178, 118, 38, 102, 87, 79, 66, 208},
            {110, 117, 124, 131, 138, 145, 152, 159, 166, 173, 180, 187, 194, 201, 208}),
        302),
        PBConstraint(PBFormula(
            {112, 158, 128, 35, 34, 160, 121, 178, 118, 38, 102, 87, 79, 66, 208},
            {111, 118, 125, 132, 139, 146, 153, 160, 167, 174, 181, 188, 195, 202, 209}),
        302),
        PBConstraint(PBFormula(
            {112, 158, 128, 35, 34, 160, 121, 178, 118, 38, 102, 87, 79, 66, 208},
            {112, 119, 126, 133, 140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210}),
        302)
    };
    PBFormula costFunction(
        {248, 279, 310, 341, 372, 403, 434, 304, 342, 380, 418, 456, 494, 532, 312, 351, 390, 429, 468, 507, 546, 176, 198, 220, 242, 264, 286, 308, 279, 248, 279, 310, 341, 372, 403, 342, 304, 342, 380, 418, 456, 494, 351, 312, 351, 390, 429, 468, 507, 198, 176, 198, 220, 242, 264, 286, 310, 279, 248, 279, 310, 341, 372, 380, 342, 304, 342, 380, 418, 456, 390, 351, 312, 351, 390, 429, 468, 220, 198, 176, 198, 220, 242, 264, 341, 310, 279, 248, 279, 310, 341, 418, 380, 342, 304, 342, 380, 418, 429, 390, 351, 312, 351, 390, 429, 242, 220, 198, 176, 198, 220, 242, 372, 341, 310, 279, 248, 279, 310, 456, 418, 380, 342, 304, 342, 380, 468, 429, 390, 351, 312, 351, 390, 264, 242, 220, 198, 176, 198, 220, 403, 372, 341, 310, 279, 248, 279, 494, 456, 418, 380, 342, 304, 342, 507, 468, 429, 390, 351, 312, 351, 286, 264, 242, 220, 198, 176, 198, 434, 403, 372, 341, 310, 279, 248, 532, 494, 456, 418, 380, 342, 304, 546, 507, 468, 429, 390, 351, 312, 308, 286, 264, 242, 220, 198, 176, 184, 207, 230, 253, 276, 299, 322, 192, 216, 240, 264, 288, 312, 336, 160, 180, 200, 220, 240, 260, 280, 136, 153, 170, 187, 204, 221, 238, 207, 184, 207, 230, 253, 276, 299, 216, 192, 216, 240, 264, 288, 312, 180, 160, 180, 200, 220, 240, 260, 153, 136, 153, 170, 187, 204, 221, 230, 207, 184, 207, 230, 253, 276, 240, 216, 192, 216, 240, 264, 288, 200, 180, 160, 180, 200, 220, 240, 170, 153, 136, 153, 170, 187, 204, 253, 230, 207, 184, 207, 230, 253, 264, 240, 216, 192, 216, 240, 264, 220, 200, 180, 160, 180, 200, 220, 187, 170, 153, 136, 153, 170, 187, 276, 253, 230, 207, 184, 207, 230, 288, 264, 240, 216, 192, 216, 240, 240, 220, 200, 180, 160, 180, 200, 204, 187, 170, 153, 136, 153, 170, 299, 276, 253, 230, 207, 184, 207, 312, 288, 264, 240, 216, 192, 216, 260, 240, 220, 200, 180, 160, 180, 221, 204, 187, 170, 153, 136, 153, 322, 299, 276, 253, 230, 207, 184, 336, 312, 288, 264, 240, 216, 192, 280, 260, 240, 220, 200, 180, 160, 238, 221, 204, 187, 170, 153, 136, 120, 135, 150, 165, 180, 195, 210, 144, 162, 180, 198, 216, 234, 252, 240, 270, 300, 330, 360, 390, 420, 135, 120, 135, 150, 165, 180, 195, 162, 144, 162, 180, 198, 216, 234, 270, 240, 270, 300, 330, 360, 390, 150, 135, 120, 135, 150, 165, 180, 180, 162, 144, 162, 180, 198, 216, 300, 270, 240, 270, 300, 330, 360, 165, 150, 135, 120, 135, 150, 165, 198, 180, 162, 144, 162, 180, 198, 330, 300, 270, 240, 270, 300, 330, 180, 165, 150, 135, 120, 135, 150, 216, 198, 180, 162, 144, 162, 180, 360, 330, 300, 270, 240, 270, 300, 195, 180, 165, 150, 135, 120, 135, 234, 216, 198, 180, 162, 144, 162, 390, 360, 330, 300, 270, 240, 270, 210, 195, 180, 165, 150, 135, 120, 252, 234, 216, 198, 180, 162, 144, 420, 390, 360, 330, 300, 270, 240, 344, 387, 430, 473, 516, 559, 602, 320, 360, 400, 440, 480, 520, 560, 224, 252, 280, 308, 336, 364, 392, 120, 135, 150, 165, 180, 195, 210, 208, 234, 260, 286, 312, 338, 364, 248, 279, 310, 341, 372, 403, 434, 400, 450, 500, 550, 600, 650, 700, 387, 344, 387, 430, 473, 516, 559, 360, 320, 360, 400, 440, 480, 520, 252, 224, 252, 280, 308, 336, 364, 135, 120, 135, 150, 165, 180, 195, 234, 208, 234, 260, 286, 312, 338, 279, 248, 279, 310, 341, 372, 403, 450, 400, 450, 500, 550, 600, 650, 430, 387, 344, 387, 430, 473, 516, 400, 360, 320, 360, 400, 440, 480, 280, 252, 224, 252, 280, 308, 336, 150, 135, 120, 135, 150, 165, 180, 260, 234, 208, 234, 260, 286, 312, 310, 279, 248, 279, 310, 341, 372, 500, 450, 400, 450, 500, 550, 600, 473, 430, 387, 344, 387, 430, 473, 440, 400, 360, 320, 360, 400, 440, 308, 280, 252, 224, 252, 280, 308, 165, 150, 135, 120, 135, 150, 165, 286, 260, 234, 208, 234, 260, 286, 341, 310, 279, 248, 279, 310, 341, 550, 500, 450, 400, 450, 500, 550, 516, 473, 430, 387, 344, 387, 430, 480, 440, 400, 360, 320, 360, 400, 336, 308, 280, 252, 224, 252, 280, 180, 165, 150, 135, 120, 135, 150, 312, 286, 260, 234, 208, 234, 260, 372, 341, 310, 279, 248, 279, 310, 600, 550, 500, 450, 400, 450, 500, 559, 516, 473, 430, 387, 344, 387, 520, 480, 440, 400, 360, 320, 360, 364, 336, 308, 280, 252, 224, 252, 195, 180, 165, 150, 135, 120, 135, 338, 312, 286, 260, 234, 208, 234, 403, 372, 341, 310, 279, 248, 279, 650, 600, 550, 500, 450, 400, 450, 602, 559, 516, 473, 430, 387, 344, 560, 520, 480, 440, 400, 360, 320, 392, 364, 336, 308, 280, 252, 224, 210, 195, 180, 165, 150, 135, 120, 364, 338, 312, 286, 260, 234, 208, 434, 403, 372, 341, 310, 279, 248, 700, 650, 600, 550, 500, 450, 400, 168, 189, 210, 231, 252, 273, 294, 160, 180, 200, 220, 240, 260, 280, 96, 108, 120, 132, 144, 156, 168, 304, 342, 380, 418, 456, 494, 532, 96, 108, 120, 132, 144, 156, 168, 189, 168, 189, 210, 231, 252, 273, 180, 160, 180, 200, 220, 240, 260, 108, 96, 108, 120, 132, 144, 156, 342, 304, 342, 380, 418, 456, 494, 108, 96, 108, 120, 132, 144, 156, 210, 189, 168, 189, 210, 231, 252, 200, 180, 160, 180, 200, 220, 240, 120, 108, 96, 108, 120, 132, 144, 380, 342, 304, 342, 380, 418, 456, 120, 108, 96, 108, 120, 132, 144, 231, 210, 189, 168, 189, 210, 231, 220, 200, 180, 160, 180, 200, 220, 132, 120, 108, 96, 108, 120, 132, 418, 380, 342, 304, 342, 380, 418, 132, 120, 108, 96, 108, 120, 132, 252, 231, 210, 189, 168, 189, 210, 240, 220, 200, 180, 160, 180, 200, 144, 132, 120, 108, 96, 108, 120, 456, 418, 380, 342, 304, 342, 380, 144, 132, 120, 108, 96, 108, 120, 273, 252, 231, 210, 189, 168, 189, 260, 240, 220, 200, 180, 160, 180, 156, 144, 132, 120, 108, 96, 108, 494, 456, 418, 380, 342, 304, 342, 156, 144, 132, 120, 108, 96, 108, 294, 273, 252, 231, 210, 189, 168, 280, 260, 240, 220, 200, 180, 160, 168, 156, 144, 132, 120, 108, 96, 532, 494, 456, 418, 380, 342, 304, 168, 156, 144, 132, 120, 108, 96, 368, 414, 460, 506, 552, 598, 644, 304, 342, 380, 418, 456, 494, 532, 272, 306, 340, 374, 408, 442, 476, 414, 368, 414, 460, 506, 552, 598, 342, 304, 342, 380, 418, 456, 494, 306, 272, 306, 340, 374, 408, 442, 460, 414, 368, 414, 460, 506, 552, 380, 342, 304, 342, 380, 418, 456, 340, 306, 272, 306, 340, 374, 408, 506, 460, 414, 368, 414, 460, 506, 418, 380, 342, 304, 342, 380, 418, 374, 340, 306, 272, 306, 340, 374, 552, 506, 460, 414, 368, 414, 460, 456, 418, 380, 342, 304, 342, 380, 408, 374, 340, 306, 272, 306, 340, 598, 552, 506, 460, 414, 368, 414, 494, 456, 418, 380, 342, 304, 342, 442, 408, 374, 340, 306, 272, 306, 644, 598, 552, 506, 460, 414, 368, 532, 494, 456, 418, 380, 342, 304, 476, 442, 408, 374, 340, 306, 272, 248, 279, 310, 341, 372, 403, 434, 248, 279, 310, 341, 372, 403, 434, 279, 248, 279, 310, 341, 372, 403, 279, 248, 279, 310, 341, 372, 403, 310, 279, 248, 279, 310, 341, 372, 310, 279, 248, 279, 310, 341, 372, 341, 310, 279, 248, 279, 310, 341, 341, 310, 279, 248, 279, 310, 341, 372, 341, 310, 279, 248, 279, 310, 372, 341, 310, 279, 248, 279, 310, 403, 372, 341, 310, 279, 248, 279, 403, 372, 341, 310, 279, 248, 279, 434, 403, 372, 341, 310, 279, 248, 434, 403, 372, 341, 310, 279, 248, 128, 144, 160, 176, 192, 208, 224, 184, 207, 230, 253, 276, 299, 322, 184, 207, 230, 253, 276, 299, 322, 144, 128, 144, 160, 176, 192, 208, 207, 184, 207, 230, 253, 276, 299, 207, 184, 207, 230, 253, 276, 299, 160, 144, 128, 144, 160, 176, 192, 230, 207, 184, 207, 230, 253, 276, 230, 207, 184, 207, 230, 253, 276, 176, 160, 144, 128, 144, 160, 176, 253, 230, 207, 184, 207, 230, 253, 253, 230, 207, 184, 207, 230, 253, 192, 176, 160, 144, 128, 144, 160, 276, 253, 230, 207, 184, 207, 230, 276, 253, 230, 207, 184, 207, 230, 208, 192, 176, 160, 144, 128, 144, 299, 276, 253, 230, 207, 184, 207, 299, 276, 253, 230, 207, 184, 207, 224, 208, 192, 176, 160, 144, 128, 322, 299, 276, 253, 230, 207, 184, 322, 299, 276, 253, 230, 207, 184, 160, 180, 200, 220, 240, 260, 280, 160, 180, 200, 220, 240, 260, 280, 312, 351, 390, 429, 468, 507, 546, 248, 279, 310, 341, 372, 403, 434, 88, 99, 110, 121, 132, 143, 154, 136, 153, 170, 187, 204, 221, 238, 180, 160, 180, 200, 220, 240, 260, 180, 160, 180, 200, 220, 240, 260, 351, 312, 351, 390, 429, 468, 507, 279, 248, 279, 310, 341, 372, 403, 99, 88, 99, 110, 121, 132, 143, 153, 136, 153, 170, 187, 204, 221, 200, 180, 160, 180, 200, 220, 240, 200, 180, 160, 180, 200, 220, 240, 390, 351, 312, 351, 390, 429, 468, 310, 279, 248, 279, 310, 341, 372, 110, 99, 88, 99, 110, 121, 132, 170, 153, 136, 153, 170, 187, 204, 220, 200, 180, 160, 180, 200, 220, 220, 200, 180, 160, 180, 200, 220, 429, 390, 351, 312, 351, 390, 429, 341, 310, 279, 248, 279, 310, 341, 121, 110, 99, 88, 99, 110, 121, 187, 170, 153, 136, 153, 170, 187, 240, 220, 200, 180, 160, 180, 200, 240, 220, 200, 180, 160, 180, 200, 468, 429, 390, 351, 312, 351, 390, 372, 341, 310, 279, 248, 279, 310, 132, 121, 110, 99, 88, 99, 110, 204, 187, 170, 153, 136, 153, 170, 260, 240, 220, 200, 180, 160, 180, 260, 240, 220, 200, 180, 160, 180, 507, 468, 429, 390, 351, 312, 351, 403, 372, 341, 310, 279, 248, 279, 143, 132, 121, 110, 99, 88, 99, 221, 204, 187, 170, 153, 136, 153, 280, 260, 240, 220, 200, 180, 160, 280, 260, 240, 220, 200, 180, 160, 546, 507, 468, 429, 390, 351, 312, 434, 403, 372, 341, 310, 279, 248, 154, 143, 132, 121, 110, 99, 88, 238, 221, 204, 187, 170, 153, 136, 304, 342, 380, 418, 456, 494, 532, 392, 441, 490, 539, 588, 637, 686, 336, 378, 420, 462, 504, 546, 588, 342, 304, 342, 380, 418, 456, 494, 441, 392, 441, 490, 539, 588, 637, 378, 336, 378, 420, 462, 504, 546, 380, 342, 304, 342, 380, 418, 456, 490, 441, 392, 441, 490, 539, 588, 420, 378, 336, 378, 420, 462, 504, 418, 380, 342, 304, 342, 380, 418, 539, 490, 441, 392, 441, 490, 539, 462, 420, 378, 336, 378, 420, 462, 456, 418, 380, 342, 304, 342, 380, 588, 539, 490, 441, 392, 441, 490, 504, 462, 420, 378, 336, 378, 420, 494, 456, 418, 380, 342, 304, 342, 637, 588, 539, 490, 441, 392, 441, 546, 504, 462, 420, 378, 336, 378, 532, 494, 456, 418, 380, 342, 304, 686, 637, 588, 539, 490, 441, 392, 588, 546, 504, 462, 420, 378, 336, 200, 225, 250, 275, 300, 325, 350, 225, 200, 225, 250, 275, 300, 325, 250, 225, 200, 225, 250, 275, 300, 275, 250, 225, 200, 225, 250, 275, 300, 275, 250, 225, 200, 225, 250, 325, 300, 275, 250, 225, 200, 225, 350, 325, 300, 275, 250, 225, 200, 256, 288, 320, 352, 384, 416, 448, 360, 405, 450, 495, 540, 585, 630, 344, 387, 430, 473, 516, 559, 602, 288, 256, 288, 320, 352, 384, 416, 405, 360, 405, 450, 495, 540, 585, 387, 344, 387, 430, 473, 516, 559, 320, 288, 256, 288, 320, 352, 384, 450, 405, 360, 405, 450, 495, 540, 430, 387, 344, 387, 430, 473, 516, 352, 320, 288, 256, 288, 320, 352, 495, 450, 405, 360, 405, 450, 495, 473, 430, 387, 344, 387, 430, 473, 384, 352, 320, 288, 256, 288, 320, 540, 495, 450, 405, 360, 405, 450, 516, 473, 430, 387, 344, 387, 430, 416, 384, 352, 320, 288, 256, 288, 585, 540, 495, 450, 405, 360, 405, 559, 516, 473, 430, 387, 344, 387, 448, 416, 384, 352, 320, 288, 256, 630, 585, 540, 495, 450, 405, 360, 602, 559, 516, 473, 430, 387, 344, 264, 297, 330, 363, 396, 429, 462, 112, 126, 140, 154, 168, 182, 196, 240, 270, 300, 330, 360, 390, 420, 128, 144, 160, 176, 192, 208, 224, 297, 264, 297, 330, 363, 396, 429, 126, 112, 126, 140, 154, 168, 182, 270, 240, 270, 300, 330, 360, 390, 144, 128, 144, 160, 176, 192, 208, 330, 297, 264, 297, 330, 363, 396, 140, 126, 112, 126, 140, 154, 168, 300, 270, 240, 270, 300, 330, 360, 160, 144, 128, 144, 160, 176, 192, 363, 330, 297, 264, 297, 330, 363, 154, 140, 126, 112, 126, 140, 154, 330, 300, 270, 240, 270, 300, 330, 176, 160, 144, 128, 144, 160, 176, 396, 363, 330, 297, 264, 297, 330, 168, 154, 140, 126, 112, 126, 140, 360, 330, 300, 270, 240, 270, 300, 192, 176, 160, 144, 128, 144, 160, 429, 396, 363, 330, 297, 264, 297, 182, 168, 154, 140, 126, 112, 126, 390, 360, 330, 300, 270, 240, 270, 208, 192, 176, 160, 144, 128, 144, 462, 429, 396, 363, 330, 297, 264, 196, 182, 168, 154, 140, 126, 112, 420, 390, 360, 330, 300, 270, 240, 224, 208, 192, 176, 160, 144, 128, 248, 279, 310, 341, 372, 403, 434, 272, 306, 340, 374, 408, 442, 476, 240, 270, 300, 330, 360, 390, 420, 272, 306, 340, 374, 408, 442, 476, 112, 126, 140, 154, 168, 182, 196, 184, 207, 230, 253, 276, 299, 322, 279, 248, 279, 310, 341, 372, 403, 306, 272, 306, 340, 374, 408, 442, 270, 240, 270, 300, 330, 360, 390, 306, 272, 306, 340, 374, 408, 442, 126, 112, 126, 140, 154, 168, 182, 207, 184, 207, 230, 253, 276, 299, 310, 279, 248, 279, 310, 341, 372, 340, 306, 272, 306, 340, 374, 408, 300, 270, 240, 270, 300, 330, 360, 340, 306, 272, 306, 340, 374, 408, 140, 126, 112, 126, 140, 154, 168, 230, 207, 184, 207, 230, 253, 276, 341, 310, 279, 248, 279, 310, 341, 374, 340, 306, 272, 306, 340, 374, 330, 300, 270, 240, 270, 300, 330, 374, 340, 306, 272, 306, 340, 374, 154, 140, 126, 112, 126, 140, 154, 253, 230, 207, 184, 207, 230, 253, 372, 341, 310, 279, 248, 279, 310, 408, 374, 340, 306, 272, 306, 340, 360, 330, 300, 270, 240, 270, 300, 408, 374, 340, 306, 272, 306, 340, 168, 154, 140, 126, 112, 126, 140, 276, 253, 230, 207, 184, 207, 230, 403, 372, 341, 310, 279, 248, 279, 442, 408, 374, 340, 306, 272, 306, 390, 360, 330, 300, 270, 240, 270, 442, 408, 374, 340, 306, 272, 306, 182, 168, 154, 140, 126, 112, 126, 299, 276, 253, 230, 207, 184, 207, 434, 403, 372, 341, 310, 279, 248, 476, 442, 408, 374, 340, 306, 272, 420, 390, 360, 330, 300, 270, 240, 476, 442, 408, 374, 340, 306, 272, 196, 182, 168, 154, 140, 126, 112, 322, 299, 276, 253, 230, 207, 184, 328, 369, 410, 451, 492, 533, 574, 256, 288, 320, 352, 384, 416, 448, 200, 225, 250, 275, 300, 325, 350, 369, 328, 369, 410, 451, 492, 533, 288, 256, 288, 320, 352, 384, 416, 225, 200, 225, 250, 275, 300, 325, 410, 369, 328, 369, 410, 451, 492, 320, 288, 256, 288, 320, 352, 384, 250, 225, 200, 225, 250, 275, 300, 451, 410, 369, 328, 369, 410, 451, 352, 320, 288, 256, 288, 320, 352, 275, 250, 225, 200, 225, 250, 275, 492, 451, 410, 369, 328, 369, 410, 384, 352, 320, 288, 256, 288, 320, 300, 275, 250, 225, 200, 225, 250, 533, 492, 451, 410, 369, 328, 369, 416, 384, 352, 320, 288, 256, 288, 325, 300, 275, 250, 225, 200, 225, 574, 533, 492, 451, 410, 369, 328, 448, 416, 384, 352, 320, 288, 256, 350, 325, 300, 275, 250, 225, 200},
        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 71, 71, 71, 71, 71, 71, 71, 72, 72, 72, 72, 72, 72, 72, 73, 73, 73, 73, 73, 73, 73, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 75, 76, 76, 76, 76, 76, 76, 76, 77, 77, 77, 77, 77, 77, 77, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105}
    );

    LinearSearchStrategy bs;
    PBMin m = PBMin(constraints, costFunction);
    std::cout << m.getCostFunctionMax() << " " << m.getCostFunctionMin() << "\n";
    Solver s(&bs,m);

    std::vector< int32_t > model;
    int64_t min;
    auto start = std::chrono::high_resolution_clock::now();
    bool sat = s.run(model,min);
    auto finish = std::chrono::high_resolution_clock::now();
    std::chrono::duration<double> elapsed = finish - start;

    std::cout << "time: "<<elapsed.count()<< "\n";
    std::cout << "sat: " << sat << "\n";
    for(int i = 0; i < model.size(); ++i){
        //std::cout << model[i] << " ";
    }
    std::cout << "" << "min: " << min << "\n\n";

}
